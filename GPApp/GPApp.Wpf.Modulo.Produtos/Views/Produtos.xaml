<UserControl x:Class="GPApp.Wpf.Modulo.Produtos.Views.Produtos"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:prism="http://prismlibrary.com/"         
             xmlns:model="clr-namespace:GPApp.Model;assembly=D:\Repositorio\gestaoprodutos\GPApp\GPApp.Model\GPApp.Model"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             MinWidth="300"
             prism:ViewModelLocator.AutoWireViewModel="True">

    <UserControl.Resources>
        <Style TargetType="Button" BasedOn="{StaticResource  MaterialDesignRaisedAccentButton}"  >
            <Setter Property="Margin" Value="0,0,10,0"></Setter>
         </Style>
    </UserControl.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50" />
            <RowDefinition Height="50" />
            <RowDefinition />
            <RowDefinition Height="30" />
        </Grid.RowDefinitions>

        <Border Grid.Row="0" BorderBrush="Black" BorderThickness="0,0,0,2">
            <TextBlock Grid.Row="0"
            Style="{StaticResource MaterialDesignDisplay1TextBlock}" >
            Produtos
            </TextBlock>
        </Border>
        
        <StackPanel Grid.Row="1" Orientation="Horizontal">
            <Button
                Width="100"
                Command="{Binding IncluirCommand}">
                Incluir
            </Button>

            <Button
                Width="100"
                Margin="50,0,0,0"
                Command="{Binding FiltrarCommand}">
                Filtrar
            </Button>

            <materialDesign:Badged VerticalAlignment="Center"
                                   Margin="10,0,15,0"
                                   Badge="{Binding NumeroRegistrosSincronizar}">

                <Button
                    Style="{StaticResource MaterialDesignFloatingActionLightButton}"
                    Margin="0 0 0 0"
                    Width="50"
                    Height="50"
                    ToolTip="Sincronizar com a nuvem"
                    Command="{Binding SincronizarNuvemCommand}"
                    materialDesign:ButtonProgressAssist.IsIndeterminate="True"
                    materialDesign:ButtonProgressAssist.IsIndicatorVisible="{Binding ProcessandoSincronizacao}"
                    materialDesign:ButtonProgressAssist.Value="-1">
                    <!-- simple example of toggling/animating pack icon with a data trigger-->
                    <materialDesign:PackIcon
                        Height="24"
                        Width="24">
                        <materialDesign:PackIcon.Style>
                            <Style
                                TargetType="materialDesign:PackIcon"
                                BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}">
                                <Setter Property="Kind" Value="CloudSync" />
                                <Style.Triggers>
                                    <DataTrigger
                                        Binding="{Binding SincronizacaoConcluida}"
                                        Value="True">
                                        <Setter
                                            Property="Kind"
                                            Value="Check" />
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation
                                                        Storyboard.TargetProperty="Opacity"
                                                        From="0"
                                                        To="1"
                                                        Duration="0:0:0.8" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </materialDesign:PackIcon.Style>
                    </materialDesign:PackIcon>
                </Button>
            </materialDesign:Badged>
            <!--TODO:Implementar-->
            <!--<Button
                Width="120"
                Command="{Binding EnviarEmailCommand}">
                Enviar email
            </Button>-->
        </StackPanel>

        <DataGrid x:Name="DataGridProdutos" Grid.Row="2"
            Margin="0 8 0 0"
            EnableRowVirtualization="True"
            ItemsSource="{Binding Produtos, IsAsync=True}"
            CanUserSortColumns="True"
            CanUserAddRows="False"
            IsReadOnly="True"
            AutoGenerateColumns="False"
            materialDesign:DataGridAssist.CellPadding="13 8 8 8"
            materialDesign:DataGridAssist.ColumnHeaderPadding="8">
            <DataGrid.Columns>
                <DataGridTextColumn
                    Binding="{Binding Codigo}"
                    Header="Código"
                    EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}" />
                <!-- if you want to use the pop up style (MaterialDesignDataGridTextColumnPopupEditingStyle), you must use MaterialDataGridTextColumn -->
                <materialDesign:MaterialDataGridTextColumn
                    Binding="{Binding Nome}"
                    Header="Nome"
                    Width="*"
                    EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />
                <!-- set a max length to get an indicator in the editor -->
                <materialDesign:MaterialDataGridTextColumn
                      Binding="{Binding Preco, StringFormat='C2',ConverterCulture='pt-BR'}"
                      Header="Preço"
                      Width="100"
                      EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />
                <materialDesign:MaterialDataGridTextColumn
                      Binding="{Binding Estoque}"
                      Header="Estoque"
                      EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />
                <materialDesign:MaterialDataGridTextColumn
                      Binding="{Binding DataCadastro, StringFormat='dd/MM/yyyy á\\s hh:mm'}"
                      Header="Cadastrado em"
                      Width="150"
                      EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button
                                    Command="{Binding DataContext.AlterarCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                    CommandParameter="{Binding Id}"
                                    Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                                    HorizontalAlignment="Left"
                                    ToolTip="Alterar produto">
                                    <materialDesign:PackIcon
                                            Kind="Edit"
                                            Height="24"
                                            Width="24" />
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

        <StackPanel Grid.Row="2" 
                    Visibility="{Binding ExibirPesquisa}"
                    Orientation="Horizontal"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    Background="#f4ff81">
            <TextBox 
                    MinWidth="200"
                    Text="{Binding TextoPesquisa}"
                    materialDesign:HintAssist.Hint="Pesquisar"  
                    Style="{StaticResource MaterialDesignFloatingHintTextBox}" />
            <Button
                Style="{StaticResource MaterialDesignRaisedButton}"
                Command="{Binding PesquisarCommand}"
                Width="100"
                Margin="10,0,0,0"
                ToolTip="Resource name: MaterialDesignRaisedButton">
                Pesquisar
            </Button>
        </StackPanel>

        <TextBlock Grid.Row="3"
            Style="{StaticResource MaterialDesignTitleTextBlock}"
                   Text="{Binding NumeroRegistros}">
        </TextBlock>

        <Button Grid.Row="2"
                Visibility="{Binding ExibirDesativarFiltro}"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                Margin="0,0,10,0"
                Style="{StaticResource MaterialDesignRaisedButton}"
                Command="{Binding DesativarFiltroCommand}">
                Desativar filtro
        </Button>

    </Grid>
    
</UserControl>
