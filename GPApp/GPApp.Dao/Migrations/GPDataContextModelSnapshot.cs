// <auto-generated />
using System;
using GPApp.Dal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GPApp.Dal.Migrations
{
    [DbContext(typeof(GPDataContext))]
    partial class GPDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GPApp.Model.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Codigo")
                        .HasMaxLength(15);

                    b.Property<decimal>("Custo");

                    b.Property<DateTimeOffset>("DataCadastro");

                    b.Property<string>("Descricao");

                    b.Property<string>("Nome")
                        .HasMaxLength(80);

                    b.Property<decimal>("Preco");

                    b.Property<decimal>("PrecoPromocional");

                    b.Property<bool>("Sincronizado");

                    b.Property<DateTimeOffset>("UltimaAtualizacao");

                    b.HasKey("Id");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("GPApp.Model.ProdutoEspecificacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.Property<string>("Nome")
                        .HasMaxLength(40);

                    b.Property<short>("Ordem");

                    b.Property<Guid>("ProdutoId");

                    b.Property<bool>("Sincronizado");

                    b.Property<DateTimeOffset>("UltimaAtualizacao");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ProdutoEspecificacao");
                });

            modelBuilder.Entity("GPApp.Model.ProdutoEstoque", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Lancamento");

                    b.Property<Guid>("ProdutoId");

                    b.Property<int>("Quantidade");

                    b.Property<bool>("Sincronizado");

                    b.Property<DateTimeOffset>("UltimaAtualizacao");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ProdutoEstoque");
                });

            modelBuilder.Entity("GPApp.Model.ProdutoImagem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Dados");

                    b.Property<short>("Ordem");

                    b.Property<string>("Prefixo")
                        .HasMaxLength(15);

                    b.Property<Guid?>("ProdutoId");

                    b.Property<bool>("Sincronizado");

                    b.Property<string>("Sufixo")
                        .HasMaxLength(4);

                    b.Property<DateTimeOffset>("UltimaAtualizacao");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ProdutoImagem");
                });

            modelBuilder.Entity("GPApp.Model.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Celular")
                        .HasMaxLength(14);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<bool>("Sincronizado");

                    b.Property<DateTimeOffset>("UltimaAtualizacao");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("GPApp.Model.ProdutoEspecificacao", b =>
                {
                    b.HasOne("GPApp.Model.Produto")
                        .WithMany("Especificacoes")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GPApp.Model.ProdutoEstoque", b =>
                {
                    b.HasOne("GPApp.Model.Produto")
                        .WithMany("PosicoesEstoque")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GPApp.Model.ProdutoImagem", b =>
                {
                    b.HasOne("GPApp.Model.Produto")
                        .WithMany("Imagens")
                        .HasForeignKey("ProdutoId");
                });
#pragma warning restore 612, 618
        }
    }
}
